<div class="editMacro">
	<table>
		<tr>
			<td>
				<label for="enabled">Is Enabled</label>
			</td>
			<td>
				<input type=checkbox name="enabled" @bind="IsEnabled" />
			</td>
		</tr>
		<tr>
			<td>
	<label for="command">Command</label>
			</td>
			<td>
	<input type=text name="command" placeholder="Text we check" @bind="Command"/>
			</td>
		</tr>
		<tr>
			<td>
	<label for="response">Response</label>
			</td>
			<td>
	<input type=text name="response" placeholder="Text we send" @bind="Response"/>
			</td>
		</tr>
	</table>
	
	
	
	<button @onclick="(Submit)" class="btn btn-primary">Submit</button>
	<button @onclick="BlazoredModal.Cancel" class="btn btn-primary cancelBtn">Cancel</button>
</div>

@code {
	[CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
	[Parameter] public Macro Macro { get; set; }
	bool IsEnabled;
	string Command;
	string Response;

	protected override Task OnInitializedAsync()
	{
		IsEnabled = Macro.IsEnabled;
		Command = Macro.Command;
		Response = Macro.Response;

		return Task.CompletedTask;
	}

	void Submit()
	{
		var macroToReturn = new Macro
		{
			IsEnabled = IsEnabled,
			Command = Command,
			Response = Response
		};

		BlazoredModal.Close(ModalResult.Ok(macroToReturn));
	}
}
